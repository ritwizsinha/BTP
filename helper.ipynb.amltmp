{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "data  = pd.read_csv('protease_only_id_smiles_IC50_deduped.csv')\n",
        "data.drop('pIC50_std', 1, inplace=True)\n",
        "data.drop('pIC50',1, inplace=True)\n",
        "data.rename(columns={'smiles': 'SMILES'}, inplace=True)\n",
        "train_data, test_data = train_test_split(data, test_size=0.1, random_state=1)\n",
        "print(f'Split off {len(test_data)} mols for testing')\n",
        "\n",
        "train_data, val_data = train_test_split(train_data, test_size=0.1, random_state=2)\n",
        "print(f'Split remaining mols into a {len(train_data)}/{len(val_data)} split for train and validation')\n",
        "\n",
        "path=\"./data/pre-training/anti-sars/\"\n",
        "train_data.to_csv(path + 'train.smi', index=False)\n",
        "val_data.to_csv(path + 'valid.smi', index=False)\n",
        "test_data.to_csv(path + 'test.smi', index=False)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Split off 655 mols for testing\nSplit remaining mols into a 5301/589 split for train and validation\n"
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "/anaconda/envs/deepgraphmolgen/lib/python3.7/site-packages/ipykernel_launcher.py:6: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only\n  \n/anaconda/envs/deepgraphmolgen/lib/python3.7/site-packages/ipykernel_launcher.py:7: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only\n  import sys\n"
        }
      ],
      "execution_count": 1,
      "metadata": {}
    }
  ],
  "metadata": {
    "interpreter": {
      "hash": "bb8a4903caeccf9bcec27e55bb2fe15b39618b501e883f6b281d171b84b21f28"
    },
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python",
      "version": "3.8.1",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "orig_nbformat": 4,
    "kernel_info": {
      "name": "python3"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}